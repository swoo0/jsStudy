정리의 기본은 keyword -> 연상 되도록

use strict (엄격모드)
값의 복사와 참조( 변수타입이 원시타입이냥 객체냥 )
자동형변환 (알아서 지맘대로...)
배열식접근법
벨리데이션(validation유효성체킁)
this -> call, apply, bind
콜백함수 - 즉각실행함수 -> DRY원칙(Do not Repeat Yourself)
tabindex = 0, 부호로 방향처리, cloneNode(true)깊은 복사와
transform, transform-origin, rotate,skew,
AJAX, 비동기, Origin, Cross Origin, CORS, Same-Origin-Policy, JSONP
다양한 Open API
빈객체를 네임스페이스로 활용
var 전역/ 함수 Scope, let은 블락 Scope
무한스크롤, 이미지끌어다놓기(파일잘 가지고 있으면 끝) -> event.preventDefault(),stopProp...,
주소줄 잘라서 reqest.getParameter 맹글어보깅, frame쓰면 보안이 약하다.











배열과 객체 생성방법(new Object() 리터럴 표현)
메모리 누수(참조변수)
일반적인 접근법과 배열식 접근법(obj_["name"]-> 변수명으로 사용 못하는 0도 가능)
선언문과 표현식의 차이
hoistiong(선언문에만 유효하고 표현식에는 유효하지 않음)
전역변수 설정의 다른 방법(우리가 선언하는 모든 전역변수,함수는 window객체의 속성이 됨.)
스크립트에서는 context에 따라 this가 가리키는 값이 바뀜

